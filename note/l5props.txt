<PostsList posts={posts} />
(1)Component ကို data ပို့ချင်တဲ့အခါ {} ထဲမှာပို့ချင်တဲ့ data ထည့်ပြီး ကြိုက်တဲ့ name ပေးပြီးပေးလို့ရတယ်။

export default function PostsList({posts}) {
  return (
    <div className='postList'>
          {posts.map(post => (
              <div className="single-post" key={post.id}>{post.title}</div>
        ))}
    </div>
  )
}

(2)ပြန်ဖမ်းတဲအခါ တော့ ပေးလိုက်တဲ့ name နဲ့ပဲပြန်ဖမ်းရမယ် object destructuring လုပ်ပြီးဖမ်းလို့ရတယ် 

နောက်ထပ်လည်းပေးလို့ရတယ် data တွေ
Example=>

<PostsList posts={posts} anotherData="This is another data" />

export default function PostsList({posts,anotherData}) {
  return (
    <div className='postList'>
          {posts.map(post => (
              <div className="single-post" key={post.id}>{post.title}</div>
        ))}
    </div>
  )
}


=>React Default Children Prop 
component ကို ခေါ်တဲ့အခါ content တွေကို ကိုယ်ကြိုက်သလို ပေးလို့ရချင်ရင် children prop ကို သုံးလို့ရတယ်။
ဥပမာ 

=>Component

import React from 'react'
import './index.css'

export default function Modal({children}) {
  return (
      <div className='modal-backdrop'>
          <div className='modal'>
             {children}
          </div>
      </div>
  )
}

 <Modal>
  <h1>Zoom class is available now.</h1>
  <p>feel free to <a href=''>join</a> here</p>
</Modal>


=>Pass function as a prop 
child component ကနေ parent မှာရှိတဲ့ state ကို change ချင်ရင် parent ကနေ child ကို prop အနေနဲ့ change ချင်တဲ့ဟာကို ပေးရပြီး child ကနေ change လိုက်လို့ရတယ်။

ဥပမာ 


 <Navbar setShowModal={setShowModal} />

Navbar Component 
 export default function Navbar({setShowModal}) {
  return (
    <nav>
        <div className='container'>
              <h1>logo</h1>
              <ul>
                  <li>Home</li>
                  <li>Posts</li>
                  <li onClick={()=>setShowModal(true)}>Sign In</li>
              </ul>
        </div>
    </nav>
  )
}
